---

# VM title, could be any user-defined string
# Required.
name: windows10

# Number of virtual CPUs
# Required.
cpus: 4

# Memory allocation
# Required.
ram: 4G

# architecture: i386, x86_64, aarch64, ...    same as suffix part of qemu-system-...
# Default: x86_64
arch: x86_64

# machine type:  see qemu-system-<ARCH> -machine help
# Default: 'pc' for i386 arch, 'q35' for x86_64  arch, 'virt' for aarch64
machine: q35

# boot mode: False=BIOS, True=EFI.
# Default: False
efi: False

# use EFI with SecureBoot (OVMF_CODE.secboot.fd). Has no effect unless efi=True
# Default: False
secureboot: False

# Trusted Platform Module emulation
# Default: False
tpm: False

# boot menu.
# If menu is disabled, the boot disk is selected as follows:
#  in install mode: first boot from CD, on next reboot from HDD
#  in run mode: boot from first HDD in the 'disk' list
# Default: False. 
bootmenu: False

# Disk image file. Can also be /dev/... file to pass through a host block device.
disk: system.qcow2

# 'disks' is an alias for 'disk'. Both support single string or list values
disks:
    - system.qcow2
    - user_data.qcow2

# for disk emulation, specify to use virtio-blk, virtio-scsi or disable virtio and emulate IDE controller
# Applicable only to image file based disks.
#
# NOTE:
# 'blk' will create one controller for each disk on PCIe bus, so do not use 'blk' if more than a few disks.
# Use 'scsi' in such case.
#
# Values: blk, scsi, none
# Default: blk
disk_virtio: blk

# will mount these images in "install" mode. In "run" mode this parameter is ignored.
# Can be a single string or list of strings
os_install:
    - Win10_21H2_English_x64.iso
    - virtio-win-0.1.217.iso

# USB Passthrough
#
# QEMU user must be able to rw the device:
# ---------------------------------------------
#  /etc/udev/rules.d/50-usbpassthrough.rules                                                                                                                                                                                                                                                 ~/vm/makemkv
# ---------------------------------------------
# SUBSYSTEM=="usb", ATTR{idVendor}=="xxxx", ATTR{idProduct}=="xxxx", MODE="0666"
#
# vendor:product
usb: 1234:5678


# Share a host directory with virtiofsd. 
# This method provides best performance as well as other useful virtualisation features.
# https://virtio-fs.gitlab.io/index.html
#
# On guest the directory can be mounted as:
#  sudo mount -t 9p -o trans=virtio,version=9p2000.L hostshare /mnt/share
share_dir_as_fsd: shared

# Map a host directory to a block dev with FAT fs on guest
#
# Never
# - use non-ASCII filenames 
# - write to the FAT directory on the host system while accessing it with the guest system
# https://www.qemu.org/docs/master/system/images.html#virtual-fat-disk-images
share_dir_as_fat: shared

# Specify network interface device model or 'none' to disable network card
# example: none, virtio, e1000, rtl8139
# Default 'rtl8139' for machine==pc and 'virtio' for everything else
nic: virtio

# Forward local port 2222 to guest port 22
# Then, you can do :
#  ssh localhost -p 2222
nic_forward_ports:
    - host: 2222
      guest: 22


# SPICE port. Can be a number like 5900 or 'auto' to select a next non occupied port
# Default: auto
spice_port: auto
